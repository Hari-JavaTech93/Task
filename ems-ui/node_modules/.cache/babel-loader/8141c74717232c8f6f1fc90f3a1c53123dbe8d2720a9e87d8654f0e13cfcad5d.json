{"ast":null,"code":"export default function Validation(values) {\n  const errors = {};\n  if (values.position == \"\") {\n    errors.position = \"Position is Required!\";\n  }\n  if (values.department == \"\") {\n    errors.department = \"Department is Required!\";\n  }\n  if (values.age == \"\") {\n    errors.age = \"Age is Required!\";\n  }\n  if (values.name == \"\") {\n    errors.name = \"Name is Required!\";\n  }\n  return errors;\n  const validate = values => {\n    console.log(login);\n    let errors = {};\n    if (!values.email) {\n      errors.email = \"Email address is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      errors.email = \"Invalid email address\";\n    }\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length < 2) {\n      errors.password = \"Password should be 2 or more characters\";\n    }\n    if (!values.confirmPass) {\n      errors.confirmPass = \"This field is required\";\n    } else if (values.confirmPass !== values.password) {\n      errors.confirmPass = \"Passwords do not match\";\n    }\n    return errors;\n  };\n}\n_c = Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","errors","position","department","age","name","validate","console","log","login","email","test","password","length","confirmPass","_c","$RefreshReg$"],"sources":["C:/Users/hari1/OneDrive/Desktop/New folder (7)/Employee-Management-System-main/Employee-Management-System-main/ems-ui/src/services/Validation.js"],"sourcesContent":["export default function Validation(values){\r\n    const errors={};\r\n    if(values.position==\"\"){\r\n        errors.position=\"Position is Required!\";\r\n    }\r\n\r\n    if(values.department==\"\"){\r\n        errors.department=\"Department is Required!\"\r\n    }\r\n    if(values.age==\"\"){\r\n        errors.age=\"Age is Required!\";\r\n    }\r\n    if(values.name==\"\"){\r\n        errors.name=\"Name is Required!\"\r\n    }\r\n\r\n    return errors;\r\n\r\n\r\n\r\n    const validate = (values) => {\r\n        console.log(login)\r\n        let errors = {}\r\n        if (!values.email) {\r\n          errors.email = \"Email address is required\";\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n          errors.email = \"Invalid email address\";\r\n        }\r\n        if (!values.password) {\r\n          errors.password = \"Password is required\";\r\n        } else if (values.password.length < 2) {\r\n          errors.password = \"Password should be 2 or more characters\";\r\n        }\r\n    \r\n        if (!values.confirmPass) {\r\n          errors.confirmPass = \"This field is required\";\r\n        } else if (values.confirmPass !== values.password) {\r\n          errors.confirmPass = \"Passwords do not match\";\r\n        }\r\n        return errors;\r\n      }\r\n\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,eAAe,SAASA,UAAUA,CAACC,MAAM,EAAC;EACtC,MAAMC,MAAM,GAAC,CAAC,CAAC;EACf,IAAGD,MAAM,CAACE,QAAQ,IAAE,EAAE,EAAC;IACnBD,MAAM,CAACC,QAAQ,GAAC,uBAAuB;EAC3C;EAEA,IAAGF,MAAM,CAACG,UAAU,IAAE,EAAE,EAAC;IACrBF,MAAM,CAACE,UAAU,GAAC,yBAAyB;EAC/C;EACA,IAAGH,MAAM,CAACI,GAAG,IAAE,EAAE,EAAC;IACdH,MAAM,CAACG,GAAG,GAAC,kBAAkB;EACjC;EACA,IAAGJ,MAAM,CAACK,IAAI,IAAE,EAAE,EAAC;IACfJ,MAAM,CAACI,IAAI,GAAC,mBAAmB;EACnC;EAEA,OAAOJ,MAAM;EAIb,MAAMK,QAAQ,GAAIN,MAAM,IAAK;IACzBO,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAClB,IAAIR,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,CAACD,MAAM,CAACU,KAAK,EAAE;MACjBT,MAAM,CAACS,KAAK,GAAG,2BAA2B;IAC5C,CAAC,MAAM,IAAI,CAAC,cAAc,CAACC,IAAI,CAACX,MAAM,CAACU,KAAK,CAAC,EAAE;MAC7CT,MAAM,CAACS,KAAK,GAAG,uBAAuB;IACxC;IACA,IAAI,CAACV,MAAM,CAACY,QAAQ,EAAE;MACpBX,MAAM,CAACW,QAAQ,GAAG,sBAAsB;IAC1C,CAAC,MAAM,IAAIZ,MAAM,CAACY,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MACrCZ,MAAM,CAACW,QAAQ,GAAG,yCAAyC;IAC7D;IAEA,IAAI,CAACZ,MAAM,CAACc,WAAW,EAAE;MACvBb,MAAM,CAACa,WAAW,GAAG,wBAAwB;IAC/C,CAAC,MAAM,IAAId,MAAM,CAACc,WAAW,KAAKd,MAAM,CAACY,QAAQ,EAAE;MACjDX,MAAM,CAACa,WAAW,GAAG,wBAAwB;IAC/C;IACA,OAAOb,MAAM;EACf,CAAC;AAEP;AAACc,EAAA,GA1CuBhB,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}